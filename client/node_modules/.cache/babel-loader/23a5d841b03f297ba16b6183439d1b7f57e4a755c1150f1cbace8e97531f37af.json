{"ast":null,"code":"var _jsxFileName = \"/Users/abhijitsahoo/Desktop/code/bitcoin-sim/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AlertCircle, Check, Send } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Alert, AlertDescription, AlertTitle } from './components/ui/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EC = require('elliptic').ec;\nconst ec = new EC('secp256k1');\nconst WebSocketServer = 'ws://localhost:8080';\nconst App = () => {\n  _s();\n  const [wallet, setWallet] = useState(null);\n  const [recipientWallet, setRecipientWallet] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [blockchain, setBlockchain] = useState([]);\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [logs, setLogs] = useState([]);\n  const [ws, setWs] = useState(null);\n  const [balance, setBalance] = useState(10); // Starting balance for sender\n  const [recipientBalance, setRecipientBalance] = useState(5); // Starting balance for recipient\n\n  useEffect(() => {\n    let socket = new WebSocket(WebSocketServer);\n    setWs(socket);\n    socket.onopen = () => {\n      console.log('WebSocket connection established');\n      addLog('Connected to server');\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log('Received data from server:', data);\n      handleSocketMessage(data);\n    };\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n      addLog('WebSocket error', 'error');\n    };\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n      addLog('Disconnected from server', 'error');\n\n      // Avoid multiple reconnect attempts if already reconnecting\n      if (socket.readyState !== WebSocket.OPEN && socket.readyState !== WebSocket.CONNECTING) {\n        // Attempt to reconnect after a delay\n        setTimeout(() => {\n          console.log('Reconnecting to WebSocket...');\n          const newSocket = new WebSocket(WebSocketServer);\n          setWs(newSocket);\n        }, 1000); // 1 second delay before reconnecting\n      }\n    };\n    return () => {\n      if (socket.readyState === WebSocket.OPEN || socket.readyState === WebSocket.CONNECTING) {\n        socket.close(); // Close the WebSocket properly if the component unmounts\n      }\n    };\n  }, []);\n  const handleSocketMessage = data => {\n    console.log('Received data from server:', data);\n    switch (data.type) {\n      case 'NEW_PENDING_TRANSACTION':\n        addLog('New pending transaction received');\n        setTransactions(prev => [...prev, data.transaction]);\n        break;\n      case 'NEW_BLOCK':\n        addLog('New block mined and added to the blockchain');\n        setBlockchain(prev => [...prev, data.block]);\n        updateBalances();\n        addLog('Transaction confirmed and block added to blockchain', 'success');\n        break;\n      case 'BLOCKCHAIN':\n        setBlockchain(data.chain);\n        break;\n      case 'ERROR':\n        addLog(`Error: ${data.message}`, 'error');\n        break;\n    }\n  };\n  const addLog = (message, type = 'info') => {\n    setLogs(prev => [...prev, {\n      id: uuidv4(),\n      message,\n      type,\n      timestamp: new Date()\n    }]);\n  };\n  const createWallet = () => {\n    const key = ec.genKeyPair();\n    const publicKey = key.getPublic('hex');\n    const privateKey = key.getPrivate('hex');\n    setWallet({\n      publicKey,\n      privateKey\n    });\n    addLog('New wallet created');\n\n    // Create a recipient wallet with predefined keys and balance\n    const recipientKey = ec.genKeyPair();\n    const recipientPublicKey = recipientKey.getPublic('hex');\n    const recipientPrivateKey = recipientKey.getPrivate('hex');\n    setRecipientWallet({\n      publicKey: recipientPublicKey,\n      privateKey: recipientPrivateKey\n    });\n    setRecipient(recipientPublicKey); // Automatically set recipient in UI\n    addLog('Recipient wallet created');\n  };\n  const getUTXOs = () => {\n    // In a real-world application, UTXOs would be fetched from the server.\n    // For this simulation, we'll mock UTXOs based on current balances.\n    return [{\n      txId: 'txid1',\n      amount: balance / 2\n    },\n    // Split current balance into two UTXOs\n    {\n      txId: 'txid2',\n      amount: balance / 2\n    }];\n  };\n  const sendTransaction = () => {\n    if (!wallet || !recipientWallet) {\n      addLog('Please create a wallet first', 'error');\n      return;\n    }\n    const utxos = getUTXOs();\n    let totalInput = 0;\n    let inputs = [];\n    for (const utxo of utxos) {\n      totalInput += utxo.amount;\n      inputs.push(utxo.txId);\n      if (totalInput >= parseFloat(amount)) break;\n    }\n    if (totalInput < parseFloat(amount)) {\n      addLog('Insufficient balance', 'error');\n      return;\n    }\n    addLog('Creating transaction...');\n\n    // Ensure the amount is correctly parsed as a float\n    const parsedAmount = parseFloat(amount);\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\n      addLog('Invalid amount', 'error');\n      return;\n    }\n    const transaction = {\n      type: 'NEW_TRANSACTION',\n      fromAddress: wallet.publicKey,\n      toAddress: recipient,\n      amount: parsedAmount,\n      // Ensure the amount is correct here\n      privateKey: wallet.privateKey,\n      inputs\n    };\n    addLog('Transaction created and signed.');\n    addLog('Broadcasting transaction to the network...');\n    ws.send(JSON.stringify(transaction));\n    addLog('Transaction broadcasted.');\n    setRecipient('');\n    setAmount('');\n  };\n  const mineBlock = () => {\n    if (!wallet) {\n      addLog('Please create a wallet first', 'error');\n      return;\n    }\n    addLog('Starting mining process...');\n    ws.send(JSON.stringify({\n      type: 'MINE_BLOCK',\n      miningRewardAddress: wallet.publicKey\n    }));\n    addLog('Mining new block...');\n  };\n  const updateBalances = () => {\n    // Update balances after the transaction is confirmed\n    const sentAmount = parseFloat(amount);\n    setBalance(prev => prev - sentAmount);\n    setRecipientBalance(prev => prev + sentAmount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8 text-center text-blue-600\",\n      children: \"Simplified Bitcoin-like System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), wallet ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Public Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 35\n            }, this), \" \", wallet.publicKey.substring(0, 20), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Private Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 35\n            }, this), \" \", wallet.privateKey.substring(0, 20), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 35\n            }, this), \" \", balance, \" BTC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createWallet,\n          className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\",\n          children: \"Create Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), recipientWallet && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Recipient Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Public Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 35\n            }, this), \" \", recipientWallet.publicKey.substring(0, 20), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Private Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 35\n            }, this), \" \", recipientWallet.privateKey.substring(0, 20), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 35\n            }, this), \" \", recipientBalance, \" BTC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Send Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value),\n        placeholder: \"Recipient Address\",\n        className: \"w-full p-2 mb-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Amount\",\n        className: \"w-full p-2 mb-4 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTransaction,\n        className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(Send, {\n          className: \"inline-block mr-2\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), \"Send Transaction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Blockchain Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 600,\n        height: 300,\n        data: blockchain,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"transactions.length\",\n          stroke: \"#8884d8\",\n          name: \"Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"nonce\",\n          stroke: \"#82ca9d\",\n          name: \"Nonce\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Mining\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mineBlock,\n        className: \"bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 transition-colors\",\n        children: \"Mine New Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Activity Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: logs.map(log => /*#__PURE__*/_jsxDEV(Alert, {\n          variant: log.type === 'error' ? 'destructive' : 'default',\n          children: [log.type === 'error' ? /*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(Check, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 77\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: new Date(log.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: log.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, log.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EK0+RJrL7xYrrE9VmlyZVlY5jqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","AlertCircle","Check","Send","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Alert","AlertDescription","AlertTitle","jsxDEV","_jsxDEV","EC","require","ec","WebSocketServer","App","_s","wallet","setWallet","recipientWallet","setRecipientWallet","transactions","setTransactions","blockchain","setBlockchain","recipient","setRecipient","amount","setAmount","logs","setLogs","ws","setWs","balance","setBalance","recipientBalance","setRecipientBalance","socket","WebSocket","onopen","console","log","addLog","onmessage","event","data","JSON","parse","handleSocketMessage","onerror","error","onclose","readyState","OPEN","CONNECTING","setTimeout","newSocket","close","type","prev","transaction","block","updateBalances","chain","message","id","timestamp","Date","createWallet","key","genKeyPair","publicKey","getPublic","privateKey","getPrivate","recipientKey","recipientPublicKey","recipientPrivateKey","getUTXOs","txId","sendTransaction","utxos","totalInput","inputs","utxo","push","parseFloat","parsedAmount","isNaN","fromAddress","toAddress","send","stringify","mineBlock","miningRewardAddress","sentAmount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","substring","onClick","value","onChange","e","target","placeholder","size","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","name","map","variant","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/abhijitsahoo/Desktop/code/bitcoin-sim/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AlertCircle, Check, Send } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Alert, AlertDescription, AlertTitle } from './components/ui/Alert';\n\nconst EC = require('elliptic').ec;\nconst ec = new EC('secp256k1');\n\nconst WebSocketServer = 'ws://localhost:8080';\n\nconst App = () => {\n  const [wallet, setWallet] = useState(null);\n  const [recipientWallet, setRecipientWallet] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [blockchain, setBlockchain] = useState([]);\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [logs, setLogs] = useState([]);\n  const [ws, setWs] = useState(null);\n  const [balance, setBalance] = useState(10); // Starting balance for sender\n  const [recipientBalance, setRecipientBalance] = useState(5); // Starting balance for recipient\n\n  useEffect(() => {\n    let socket = new WebSocket(WebSocketServer);\n    setWs(socket);\n\n    socket.onopen = () => {\n      console.log('WebSocket connection established');\n      addLog('Connected to server');\n    };\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log('Received data from server:', data);\n      handleSocketMessage(data);\n    };\n\n    socket.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      addLog('WebSocket error', 'error');\n    };\n\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n      addLog('Disconnected from server', 'error');\n\n      // Avoid multiple reconnect attempts if already reconnecting\n      if (socket.readyState !== WebSocket.OPEN && socket.readyState !== WebSocket.CONNECTING) {\n        // Attempt to reconnect after a delay\n        setTimeout(() => {\n          console.log('Reconnecting to WebSocket...');\n          const newSocket = new WebSocket(WebSocketServer);\n          setWs(newSocket);\n        }, 1000); // 1 second delay before reconnecting\n      }\n    };\n\n    return () => {\n      if (socket.readyState === WebSocket.OPEN || socket.readyState === WebSocket.CONNECTING) {\n        socket.close(); // Close the WebSocket properly if the component unmounts\n      }\n    };\n}, []);\n\n\n  const handleSocketMessage = (data) => {\n    console.log('Received data from server:', data);\n    switch (data.type) {\n      case 'NEW_PENDING_TRANSACTION':\n        addLog('New pending transaction received');\n        setTransactions(prev => [...prev, data.transaction]);\n        break;\n      case 'NEW_BLOCK':\n        addLog('New block mined and added to the blockchain');\n        setBlockchain(prev => [...prev, data.block]);\n        updateBalances();\n        addLog('Transaction confirmed and block added to blockchain', 'success');\n        break;\n      case 'BLOCKCHAIN':\n        setBlockchain(data.chain);\n        break;\n      case 'ERROR':\n        addLog(`Error: ${data.message}`, 'error');\n        break;\n    }\n  };\n\n  const addLog = (message, type = 'info') => {\n    setLogs(prev => [...prev, { id: uuidv4(), message, type, timestamp: new Date() }]);\n  };\n\n  const createWallet = () => {\n    const key = ec.genKeyPair();\n    const publicKey = key.getPublic('hex');\n    const privateKey = key.getPrivate('hex');\n    setWallet({ publicKey, privateKey });\n    addLog('New wallet created');\n\n    // Create a recipient wallet with predefined keys and balance\n    const recipientKey = ec.genKeyPair();\n    const recipientPublicKey = recipientKey.getPublic('hex');\n    const recipientPrivateKey = recipientKey.getPrivate('hex');\n    setRecipientWallet({ publicKey: recipientPublicKey, privateKey: recipientPrivateKey });\n    setRecipient(recipientPublicKey); // Automatically set recipient in UI\n    addLog('Recipient wallet created');\n  };\n\n  const getUTXOs = () => {\n    // In a real-world application, UTXOs would be fetched from the server.\n    // For this simulation, we'll mock UTXOs based on current balances.\n    return [\n      { txId: 'txid1', amount: balance / 2 }, // Split current balance into two UTXOs\n      { txId: 'txid2', amount: balance / 2 }\n    ];\n  };\n\n  const sendTransaction = () => {\n    if (!wallet || !recipientWallet) {\n      addLog('Please create a wallet first', 'error');\n      return;\n    }\n\n    const utxos = getUTXOs();\n    let totalInput = 0;\n    let inputs = [];\n\n    for (const utxo of utxos) {\n      totalInput += utxo.amount;\n      inputs.push(utxo.txId);\n      if (totalInput >= parseFloat(amount)) break;\n    }\n\n    if (totalInput < parseFloat(amount)) {\n      addLog('Insufficient balance', 'error');\n      return;\n    }\n\n    addLog('Creating transaction...');\n    \n    // Ensure the amount is correctly parsed as a float\n    const parsedAmount = parseFloat(amount);\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\n      addLog('Invalid amount', 'error');\n      return;\n    }\n\n    const transaction = {\n      type: 'NEW_TRANSACTION',\n      fromAddress: wallet.publicKey,\n      toAddress: recipient,\n      amount: parsedAmount,  // Ensure the amount is correct here\n      privateKey: wallet.privateKey,\n      inputs\n    };\n\n    addLog('Transaction created and signed.');\n    addLog('Broadcasting transaction to the network...');\n\n    ws.send(JSON.stringify(transaction));\n\n    addLog('Transaction broadcasted.');\n    setRecipient('');\n    setAmount('');\n  };\n\n  const mineBlock = () => {\n    if (!wallet) {\n      addLog('Please create a wallet first', 'error');\n      return;\n    }\n\n    addLog('Starting mining process...');\n    ws.send(JSON.stringify({ type: 'MINE_BLOCK', miningRewardAddress: wallet.publicKey }));\n    addLog('Mining new block...');\n  };\n\n  const updateBalances = () => {\n    // Update balances after the transaction is confirmed\n    const sentAmount = parseFloat(amount);\n    setBalance(prev => prev - sentAmount);\n    setRecipientBalance(prev => prev + sentAmount);\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-4xl font-bold mb-8 text-center text-blue-600\">Simplified Bitcoin-like System</h1>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h2 className=\"text-2xl font-semibold mb-4\">Wallet</h2>\n          {wallet ? (\n            <div>\n              <p className=\"mb-2\"><strong>Public Key:</strong> {wallet.publicKey.substring(0, 20)}...</p>\n              <p className=\"mb-4\"><strong>Private Key:</strong> {wallet.privateKey.substring(0, 20)}...</p>\n              <p className=\"mb-4\"><strong>Balance:</strong> {balance} BTC</p>\n            </div>\n          ) : (\n            <button onClick={createWallet} className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\">\n              Create Wallet\n            </button>\n          )}\n        </div>\n\n        {recipientWallet && (\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-2xl font-semibold mb-4\">Recipient Wallet</h2>\n            <div>\n              <p className=\"mb-2\"><strong>Public Key:</strong> {recipientWallet.publicKey.substring(0, 20)}...</p>\n              <p className=\"mb-4\"><strong>Private Key:</strong> {recipientWallet.privateKey.substring(0, 20)}...</p>\n              <p className=\"mb-4\"><strong>Balance:</strong> {recipientBalance} BTC</p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mt-8\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Send Transaction</h2>\n        <input\n          type=\"text\"\n          value={recipient}\n          onChange={(e) => setRecipient(e.target.value)}\n          placeholder=\"Recipient Address\"\n          className=\"w-full p-2 mb-2 border rounded\"\n        />\n        <input\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          placeholder=\"Amount\"\n          className=\"w-full p-2 mb-4 border rounded\"\n        />\n        <button onClick={sendTransaction} className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition-colors\">\n          <Send className=\"inline-block mr-2\" size={16} />\n          Send Transaction\n        </button>\n      </div>\n\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Blockchain Visualization</h2>\n        <LineChart width={600} height={300} data={blockchain} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"index\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"transactions.length\" stroke=\"#8884d8\" name=\"Transactions\" />\n          <Line type=\"monotone\" dataKey=\"nonce\" stroke=\"#82ca9d\" name=\"Nonce\" />\n        </LineChart>\n      </div>\n\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Mining</h2>\n        <button onClick={mineBlock} className=\"bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 transition-colors\">\n          Mine New Block\n        </button>\n      </div>\n\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Activity Log</h2>\n        <div className=\"space-y-2\">\n          {logs.map((log) => (\n            <Alert key={log.id} variant={log.type === 'error' ? 'destructive' : 'default'}>\n              {log.type === 'error' ? <AlertCircle className=\"h-4 w-4\" /> : <Check className=\"h-4 w-4\" />}\n              <AlertTitle>{new Date(log.timestamp).toLocaleTimeString()}</AlertTitle>\n              <AlertDescription>{log.message}</AlertDescription>\n            </Alert>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}